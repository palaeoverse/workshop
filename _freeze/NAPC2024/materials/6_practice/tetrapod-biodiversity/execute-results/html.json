{
  "hash": "2a85ccc42d0430299bd91a41b00ff864",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Alpha diversity and geographic range size of Carboniferous and Permian tetrapods\"\nexecute:\n  echo: true\n  eval: true\n  freeze: true\norder: 2\n---\n\n# Introduction\n\n`palaeoverse` is an R package developed by palaeobiologists, for palaeobiologists. The aim of the package is to generate a community-driven toolkit of generic functions for the palaeobiological community. The package does not provide implementations of statistical analyses, rather it provides auxiliary functions to help streamline analyses and improve code readability and reproducibility. This vignette (or tutorial if you prefer) is provided to guide you through the installation process and some of the functionality available within `palaeoverse`. To do so, we will focus on a usage example looking at various trends in tetrapods across the Carboniferous/Permian boundary.\n\n## Installation\n\nThe `palaeoverse` package can be installed via CRAN or its dedicated [GitHub repository](https://github.com/palaeoverse/palaeoverse) if the development version is preferred. To install via the CRAN, simply use:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palaeoverse\")\n```\n:::\n\n\nTo install the development version, first install the `devtools` package, and then use `install_github` to install `palaeoverse` directly from GitHub.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"palaeoverse/palaeoverse\")\n```\n:::\n\n\nYou can now load `palaeoverse` using the default `library` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palaeoverse)\n```\n:::\n\n\n**Before we get onto the good stuff, the development team has a small request**. If you use `palaeoverse` in your research, please cite the associated publication. This will help us to continue our work in supporting you to do yours. You can access the appropriate citation via:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncitation(\"palaeoverse\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTo cite palaeoverse in publications, use the following citation:\n\n  Jones, L.A., Gearty, W., Allen, B.J., Eichenseer, K., Dean, C.D.,\n  Galván S., Kouvari, M., Godoy, P.L., Nicholl, C.S.C., Dillon, E.M.,\n  Flannery-Sutherland, J.T., Chiarenza, A.A. 2023. palaeoverse: A\n  community-driven R package to support palaeobiological analysis.\n  Methods in Ecology and Evolution. 14(9), 2205--2215. doi:\n  10.1111/2041-210X.14099\n\nA BibTeX entry for LaTeX users is\n\n  @Article{,\n    title = {palaeoverse: A community-driven R package to support palaeobiological analysis},\n    author = {Lewis A. Jones and William Gearty and Bethany J. Allen and Kilian Eichenseer and Christopher D. Dean and Sofía Galván and Miranta Kouvari and Pedro L. Godoy and Cecily S. C. Nicholl and Lucas Buffan and Erin M. Dillon and Joseph T. Flannery-Sutherland and Alfio Alessandro Chiarenza},\n    year = {2023},\n    journal = {Methods in Ecology and Evolution},\n    volume = {14(9)},\n    pages = {2205--2215},\n    doi = {10.1111/2041-210X.14099},\n  }\n```\n\n\n:::\n:::\n\n\n## Now that that's out of the way, let's begin!\n\nThe Carboniferous and early Permian have been regarded as critical intervals for early four-limbed vertebrates, in terms of both diversification and biogeography. During this time several major groups of tetrapods emerged (including crown amniotes), and the extensive tropical rainforests of the Carboniferous gave way to dryland vegetation during the Permian, in what's known as the 'Carboniferous Rainforest Collapse' (CRC) (for more information, see Dunne et al., 2018).\n\nIn this vignette we’ll use the `tetrapods` dataset to demonstrate how to use `palaeoverse` functions to examine how alpha diversity and range size vary across this interval.\n\n# The Tetrapods Dataset\n\nFunctions in `palaeoverse` are designed around the assumption that most users' data are stored in an occurrence `data.frame`. As such, this is the expected input data format for most functions. We provide two example occurrence datasets (`tetrapods` and `reefs`) within the package from different data sources. While these two datasets have similar structures, the data (variables) available in each differ. The `tetrapods` dataset is a compilation of Carboniferous--Early Triassic tetrapod occurrences (*n* = 5,270) from the [Paleobiology Database](https://paleobiodb.org/#). We'll be using this dataset to demonstrate some of the available functionality in `palaeoverse`.\n\nLet's get started by exploring the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call the dataset:\ndata(tetrapods)\n\n# View the column names and the first five lines of the first three columns:\ncolnames(tetrapods)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"occurrence_no\"     \"collection_no\"     \"identified_name\"  \n [4] \"identified_rank\"   \"accepted_name\"     \"accepted_rank\"    \n [7] \"early_interval\"    \"late_interval\"     \"max_ma\"           \n[10] \"min_ma\"            \"phylum\"            \"class\"            \n[13] \"order\"             \"family\"            \"genus\"            \n[16] \"abund_value\"       \"abund_unit\"        \"lng\"              \n[19] \"lat\"               \"collection_name\"   \"cc\"               \n[22] \"formation\"         \"stratgroup\"        \"member\"           \n[25] \"zone\"              \"lithology1\"        \"environment\"      \n[28] \"pres_mode\"         \"taxon_environment\" \"motility\"         \n[31] \"life_habit\"        \"diet\"             \n```\n\n\n:::\n\n```{.r .cell-code}\ntetrapods[1:5, 1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  occurrence_no collection_no                        identified_name\n1        146665         12943     n. gen. Anconastes n. sp. vesperus\n2        147090         13004                     Gorgonopsia indet.\n3        147521         13043 n. gen. Procolophon n. sp. trigoniceps\n4        147523         13044       n. gen. Ophiodeirus n. sp. casei\n5        147563         13046         Broiliellus n. sp. arroyoensis\n```\n\n\n:::\n:::\n\n\nAs you can see, we have a variety of variables to play around with! For this vignette we'll mostly be focusing on some of the spatial information, such as latitude and longitude. But first, we need to do some data prep...\n\n# Exploring the functions\n\nIf we're looking at patterns of tetrapod diversity and distribution over the Carboniferous and Permian, we'll first have to bin our occurrences by time and by space. We can do this easily with a few functions in the `palaeoverse` package. Let's first look at binning by time.\n\nThere are two `palaeoverse` functions that help us to assign occurrences to different intervals, or 'bins', of time. First, we'll use `time_bins` to make some suitable time bins for our study. The function requires a maximum and a minimum time interval to run. As we know we're interested in looking at the Carboniferous and the Permian, we can use these as our intervals to get the suitable stage-level bins that we're after:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate time bins\nbins <- time_bins(interval = c(\"Carboniferous\", \"Permian\"),\n                  rank = \"stage\",\n                  scale = \"GTS2012\",\n                  plot = FALSE)\nhead(bins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  bin interval_name  rank max_ma mid_ma min_ma duration_myr abbr  colour  font\n1   1   Tournaisian stage  358.9 352.80  346.7         12.2    T #8CB06C black\n2   2        Visean stage  346.7 338.80  330.9         15.8    V #A6B96C black\n3   3  Serpukhovian stage  330.9 327.05  323.2          7.7   Se #BFC26B black\n4   4    Bashkirian stage  323.2 319.20  315.2          8.0    B #99C2B5 black\n5   5     Moscovian stage  315.2 311.10  307.0          8.2    M #B3CBB9 black\n6   6    Kasimovian stage  307.0 305.35  303.7          3.3   Ka #BFD0C5 black\n```\n\n\n:::\n:::\n\n\nBefore we can bin our occurrences into these time bins, we will need the ages of the occurrences in millions of years. Since the numeric ages may have changed since we downloaded the data from the PBDB, we'll use `look_up` to get the numeric ages for the occurrences within `tetrapods` dataset based on their assigned interval names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get new numeric ages for named intervals using the \n# interval key that is supplied with Palaeoverse\ntetrapods <- look_up(tetrapods, int_key = interval_key)\n\n# Make sure that any values which could not be matched contain their original values\ntetrapods$interval_max_ma <- ifelse(is.na(tetrapods$interval_max_ma),\n                                    tetrapods$max_ma,\n                                    tetrapods$interval_max_ma)\ntetrapods$interval_min_ma <- ifelse(is.na(tetrapods$interval_min_ma),\n                                    tetrapods$min_ma,\n                                    tetrapods$interval_min_ma)\ntetrapods$interval_mid_ma <- (tetrapods$min_ma + tetrapods$max_ma)/2\n\n# Look at the updated dataset\ntetrapods[1:5, 35:37]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  interval_max_ma interval_mid_ma interval_min_ma\n1         307.000         302.400          298.90\n2         265.100         262.500          259.10\n3         251.902         249.685          247.20\n4         290.100         284.700          283.50\n5         283.500         275.800          272.95\n```\n\n\n:::\n:::\n\n\nAs you can see we've got some new columns with updated interval ages. Handy!\n\nNow we're ready to bin the occurrences into these time bins using `bin_time`. For now, we'll go with the 'mid' method, but we'll talk about this more in a minute.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Rename columns so that new intervals are used for binning\ncolnames(tetrapods)[9:10] <- c(\"old_max_ma\", \"old_min_ma\")\ncolnames(tetrapods)[c(35, 37)] <- c(\"max_ma\", \"min_ma\")\n\n# Generate time bins\ntetrapods <- bin_time(occdf = tetrapods,\n                      bins = bins,\n                      method = 'mid')\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in bin_time(occdf = tetrapods, bins = bins, method = \"mid\"): Minimum age of occurrence data is less than minimum age of bins.\n```\n\n\n:::\n:::\n\n\nOh no! We've hit an error. This is because there's some occurrences that sit outside of the time intervals we're interested in. `bin_time` can't bin occurrences which sit outside of the time intervals you've chosen, so for it to work, we'll first have to remove these occurrences.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove occurrences that are younger than the time intervals we're interested in\ncp_tetrapods <- subset(tetrapods, min_ma > min(bins$min_ma))\n\n# Bin occurrences into chosen time bins\nmid_tetrapods <- bin_time(occdf = cp_tetrapods,\n                          bins = bins,\n                          method = 'mid')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in bin_time(occdf = cp_tetrapods, bins = bins, method = \"mid\"): One or\nmore occurrences have a midpoint age equivalent to a bin boundary. Binning\nskipped for these occurrences. Hint: `which(is.na(occdf$bin_assignment))`.\n```\n\n\n:::\n:::\n\n\nThat's better! Let's see how our dataset has changed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Examine the dataset columns\ncolnames(mid_tetrapods)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"occurrence_no\"     \"collection_no\"     \"identified_name\"  \n [4] \"identified_rank\"   \"accepted_name\"     \"accepted_rank\"    \n [7] \"early_interval\"    \"late_interval\"     \"old_max_ma\"       \n[10] \"old_min_ma\"        \"phylum\"            \"class\"            \n[13] \"order\"             \"family\"            \"genus\"            \n[16] \"abund_value\"       \"abund_unit\"        \"lng\"              \n[19] \"lat\"               \"collection_name\"   \"cc\"               \n[22] \"formation\"         \"stratgroup\"        \"member\"           \n[25] \"zone\"              \"lithology1\"        \"environment\"      \n[28] \"pres_mode\"         \"taxon_environment\" \"motility\"         \n[31] \"life_habit\"        \"diet\"              \"early_stage\"      \n[34] \"late_stage\"        \"max_ma\"            \"interval_mid_ma\"  \n[37] \"min_ma\"            \"id\"                \"n_bins\"           \n[40] \"bin_assignment\"    \"bin_midpoint\"     \n```\n\n\n:::\n:::\n\n\nAs you can see, four new columns (variables) have been added to our dataset. Two of these are especially important. First is the `bin_assignment`, which shows which number bin the occurrence has been added to. Second is `n_bins` - this shows how many bins the occurrence could potentially have been placed within. Let's examine this further.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a table of potential number of bins\ntable(mid_tetrapods$n_bins) # raw counts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   1    2    3    4    5    6    7    8    9 \n 843 1754  425  268   33   34    3    2   16 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(mid_tetrapods$n_bins) / nrow(mid_tetrapods) # proportions\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n           1            2            3            4            5            6 \n0.2495559503 0.5192421551 0.1258140912 0.0793368857 0.0097690941 0.0100651273 \n           7            8            9 \n0.0008880995 0.0005920663 0.0047365305 \n```\n\n\n:::\n:::\n\n\nAs you can see, only \\~25% of the dataset can be assigned to just one bin - the other occurrences can't be confidently assigned to an individual time interval. This is where the other methods for the `bin_time` function come in handy. They provide the user with different options when assigning occurrences to bins. Instead of the 'mid' method, let's try the 'majority' method instead, which places the occurrences in the bin which covers the majority of their potential time range.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bin occurrences into chosen time bins\nmaj_tetrapods <- bin_time(occdf = cp_tetrapods,\n                          bins = bins,\n                          method = 'majority')\n```\n:::\n\n\nWe'd recommend playing around with these different options and seeing how they impact your results!\n\nNext, we'll also bin our occurrences spatially. We need a couple of functions to do this. Firstly, we need to add palaeocoordinates to our dataset. We can use the `palaeorotate` function to do this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Palaeorotate occurrences\nmaj_tetrapods <- palaeorotate(occdf = maj_tetrapods, age = \"bin_midpoint\",\n                              method = \"point\", model = \"PALEOMAP\")\n```\n:::\n\n\nNow let's check that it's worked...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check palaeocoordinates\nhead(maj_tetrapods[, c(\"p_lng\", \"p_lat\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     p_lng    p_lat\n1 -39.1618   2.9214\n2 -34.0923 -59.1326\n4 -29.7188  -0.1250\n5 -27.9228   3.6845\n6 -29.0469  -0.2730\n7 -16.5579  -6.0513\n```\n\n\n:::\n:::\n\n\nLooks good to me! Now that we have palaeocoordinates for our occurrences, we can put them into spatial bins. We can do this using the `bin_space` function, which assigns each occurrence to one of many discrete equal-area hexagonal grid cells (based on [Uber's H3 system](https://h3geo.org/)).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a table of potential number of bins\nmaj_tetrapods <- bin_space(occdf = maj_tetrapods,\n                           lng = 'p_lng',\n                           lat = 'p_lat',\n                           spacing = 100)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAverage spacing between adjacent cells in the primary grid was set to 103.6 km. \nH3 resolution: 3\n```\n\n\n:::\n\n```{.r .cell-code}\n# Show the first 6 rows of the new columns added using `bin_space`.\nhead(maj_tetrapods[, c(\"cell_ID\", \"cell_centroid_lng\", \"cell_centroid_lat\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          cell_ID cell_centroid_lng cell_centroid_lat\n1 8380d4fffffffff         -38.83199        3.04111345\n2 83dd68fffffffff         -34.66666      -59.09848198\n4 837c65fffffffff         -29.87643       -0.04859754\n5 837c40fffffffff         -27.94272        3.31086571\n6 837c64fffffffff         -28.90531       -0.63974717\n7 837da3fffffffff         -16.16673       -6.15422544\n```\n\n\n:::\n:::\n\n\n`bin_space` adds some new columns, including one with the unique grid cell ID, as well as latitudinal and longitudinal coordinates for the centroid of that cell.\n\nNow that we have both temporal and spatial bins, we can use these data to see how the spatial coverage of tetrapod fossils in our dataset varies through time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract unique interval midpoints\nmidpoints <- sort(unique(maj_tetrapods$bin_midpoint))\n\n# Calculate the number of unique cells in each time bin\nunique_cells <- unique(maj_tetrapods[, c(\"bin_midpoint\", \"cell_ID\")])\nspat.cov <- group_apply(unique_cells, group = \"bin_midpoint\", fun = nrow)\n```\n:::\n\n\nLet's save that for now and move on to some of our analyses!\n\n# Unique taxa and alpha diversity\n\nIn many cases palaeobiologists count unique taxa by retaining only unique occurrences identified to a given taxonomic resolution (e.g. genera or species); however, this can result in some useful information being discarded. The `tax_unique` function retains occurrences identified to a coarser taxonomic resolution which are not already represented within the dataset. Take, for example, the following occurrences:\n\n-   *Albertosaurus sarcophagus*\n-   *Ankylosaurus* sp.\n-   *Ceratopsidae* indet.\n-   *Ornithominus* sp.\n-   *Tyrannosaurus rex*\n\nA filter for species-level identifications would reduce the species richness to just two (*A. sarcophagus* and *T. rex*). However, none of these clades are nested within one another, so each of the indeterminately identified occurrences represents at least one species not already represented in the dataset. `tax_unique` is designed to deal with such taxonomic data and would retain all seven 'species' in this example. For further details see `?tax_unique`.\n\nThis function can be especially useful for when looking at alpha diversity (local richness). Let's apply it to our dataset by filtering it to genus-level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter to genus-level:\ntet_genera <- tax_unique(occdf = maj_tetrapods, genus = \"genus\", family = \"family\",\n                         order = \"order\", class = \"class\", resolution = \"genus\")\n```\n:::\n\n\nWe can compare this to the genera from the original dataset to see how many genera were added by using `tax_unique()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# How many unique genera before:\nlength(unique(maj_tetrapods$genus))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 717\n```\n\n\n:::\n\n```{.r .cell-code}\n# How many unique genera after:\nlength(unique(tet_genera$unique_name))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 719\n```\n\n\n:::\n:::\n\n\nAs you can see we've added two taxa that otherwise would have been ignored! To see more specifically how the function has performed, take a look at row 718, which records an indeterminate occurrence of the family *Dicynodontidae*. This occurrence now has a unique name of 'Dicynodontidae indet.'\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# See just row 718\ntet_genera[718, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           class        order         family genus           unique_name\n718 Osteichthyes Dicynodontia Dicynodontidae  <NA> Dicynodontidae indet.\n```\n\n\n:::\n:::\n\n\nNow, let's use this function to extract the unique genera for each collection (=locality) with `group_apply`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use group_apply along with tax_unique:\ncoll_genera <- group_apply(occdf = maj_tetrapods,\n                           group = c(\"collection_no\"),\n                           fun = tax_unique,\n                           genus = \"genus\",\n                           family = \"family\",\n                           order = \"order\",\n                           class = \"class\",\n                           resolution = \"genus\")\n# See structure of the new dataframe:\nstr(coll_genera)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t2853 obs. of  6 variables:\n $ class        : chr  \"Osteichthyes\" \"Osteichthyes\" \"Osteichthyes\" \"Reptilia\" ...\n $ order        : chr  NA \"Temnospondyli\" \"Cotylosauria\" NA ...\n $ family       : chr  NA \"Dissorophidae\" NA \"Bolosauridae\" ...\n $ genus        : chr  NA \"Parioxys\" \"Archeria\" \"Bolosaurus\" ...\n $ unique_name  : chr  \"Osteichthyes indet.\" \"Parioxys sp.\" \"Archeria sp.\" \"Bolosaurus sp.\" ...\n $ collection_no: chr  \"11149\" \"11152\" \"11165\" \"11165\" ...\n```\n\n\n:::\n:::\n\n\nNext, let's count the number of unique genera per collection:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the names of unique genera per collection\nunique_genera <- unique(coll_genera[, c(\"unique_name\", \"collection_no\")])\n\n# Calculate the number of unique genera per collection\ncoll_taxa <- group_apply(unique_genera, group = \"collection_no\", fun = nrow)\n\n# Rename column names:\ncolnames(coll_taxa) <- c(\"n_taxa\", \"collection_no\")\n\n# Take a quick look at the new dataframe\nhead(coll_taxa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  n_taxa collection_no\n1      1        104796\n2      1        106270\n3      3        106558\n4      8        108766\n5      3        109702\n6      1         11149\n```\n\n\n:::\n:::\n\n\nTo plot an alpha diversity (local richness) plot, we will need to add interval age data to these collections:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Take the columns pertaining to collections and their ages in millions of years:\ncoll_info <- maj_tetrapods[, c(\"collection_no\", \"max_ma\", \"interval_mid_ma\", \"min_ma\")]\n\n# Remove duplicated collections based on the collection number (column 1)\ncoll_info <- coll_info[!duplicated(coll_info[1]),]\n\n# Combine this dataframe with the dataframe from above\nalpha_data <- merge(coll_info, coll_taxa, by = \"collection_no\")\n\n# Take a look:\nhead(alpha_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  collection_no max_ma interval_mid_ma min_ma n_taxa\n1         11149 290.10          284.70 283.50      1\n2         11152 293.52          283.90 272.95      1\n3         11165 298.90          294.50 290.10      9\n4         11323 303.70          301.15 293.52      1\n5         12943 307.00          302.40 298.90      1\n6         12976 283.50          275.80 272.95      7\n```\n\n\n:::\n:::\n\n\nDone. Now to plot alpha diversity through time! Let's start with a simple scatterplot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a plot for alpha diversity in the Carboniferous and Permian\nplot(alpha_data$interval_mid_ma, alpha_data$n_taxa, # add points\n     xlim = rev(range(alpha_data$interval_mid_ma, na.rm = TRUE)), # reverse x-axis\n     xlab=\"Time (Ma)\", ylab=\"No. taxa\", # axes labels\n     pch = 19, col = \"#0e826f\") # point style and colour\n```\n\n::: {.cell-output-display}\n![](tetrapod-biodiversity_files/figure-html/alpha-div-plot-1-1.png){width=672}\n:::\n:::\n\n\nThat looks good, but it's a bit difficult to figure out what stages contain which data points. `axis_geo()` adds a geological timescale between the plot and the axis.\n\nTaking our plot from above, let's use this function to add a timescale to the x-axis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set margins\npar(mar = c(7.1, 4.1, 4.1, 2.1)) # expand at bottom if adding more interval categories\n\n# Make the final alpha diversity plot\nplot(alpha_data$interval_mid_ma, alpha_data$n_taxa, # add the points\n     axes = FALSE,\n     xlim = rev(range(alpha_data$interval_mid_ma, na.rm = TRUE)), # reverse the x-axis\n     xlab = \" \", ylab = \"No. taxa\", # axes labels\n     pch = 19, col = \"#0e826f\") # point style and colour\nbox()\naxis(2) # add a normal axis to the elft side\naxis_geo(side = 1, intervals = list(\"epochs\", \"periods\"))\ntitle(xlab = \"Time (Ma)\", line = 4)\n```\n\n::: {.cell-output-display}\n![](tetrapod-biodiversity_files/figure-html/alpha-div-plot-2-1.png){width=672}\n:::\n:::\n\n\nAmazing! Now we can clearly see that alpha diversity appears to be a lot higher in the Permian than the Carboniferous. But how has the spatial distribution of tetrapods changed across this boundary? Let's use some of the other `palaeoverse` functions to find out!\n\n# Exploring range size/spatial issues through time\n\nAnother factor that we can examine is how range size of taxa changed across the C/P boundary. We can examine this spatial distribution through time using the `tax_range_space` function, which provides several different methods for estimating the distribution of taxonomic occurrences. For now we'll use the method `con` which calculates the geographic range of taxa using a convex hull, but the rest of the methods are described in detail in the function documentation which can be accessed via `?tax_range_space`.\n\nWe can use this in combination with `group_apply` to calculate the average for each time interval for our dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, remove any occurrences without a genus\nspace_tetrapods <- subset(maj_tetrapods, !is.na(genus))\n\n# Find temporal range of all genera\nspace_tetrapods <- group_apply(occdf = space_tetrapods,\n                               group = c(\"bin_midpoint\"),\n                               fun = tax_range_space,\n                               name = \"genus\",\n                               lng = \"p_lng\",\n                               lat = \"p_lat\",\n                               method = \"con\")\n\n# Have a look at the dataset\nhead(space_tetrapods)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              taxon taxon_id      area bin_midpoint\n1         Abdalodon        1      0.00       257.05\n2         Acrodenta        2      0.00       257.05\n3       Adelosaurus        3      0.00       257.05\n4     Aelurognathus        4 292392.77       257.05\n9      Aelurosaurus        5  14698.41       257.05\n14 Aenigmastropheus        6      0.00       257.05\n```\n\n\n:::\n:::\n\n\nAs you can see, the combination of `group_apply` and `tax_range_space` produces a dataset with the area of geographic range for each taxon in kilometers squared for each time interval. Note that an area of zero here means that there is only one occurrence of that taxon in that time bin. From this information we can now plot how the average range size of tetrapods changed throughout the Carboniferous and Permian:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the average geographic range size for each time interval\nspace_tetrapods_mean <- group_apply(space_tetrapods, \"bin_midpoint\", function(df) mean(df$area))\ncolnames(space_tetrapods_mean) <- c(\"mean_area\", \"bin_midpoint\")\n\n# Create a plot of average range size through time\nplot(space_tetrapods_mean$bin_midpoint, space_tetrapods_mean$mean_area, # add the points\n     axes = FALSE,\n     xlim = rev(range(as.numeric(space_tetrapods_mean$bin_midpoint), na.rm = TRUE)), # reverse the x-axis\n     xlab = \" \", ylab = expression(\"Average range size of tetrapod genera (km\"^2~\")\"), # axes labels\n     pch = 19, col = \"#0e826f\") # point style and colour\nbox()\naxis(2) # add a normal axis to the left side\naxis_geo(side = 1, intervals = list(\"epochs\", \"periods\"))\ntitle(xlab = \"Time (Ma)\", line = 4)\n```\n\n::: {.cell-output-display}\n![](tetrapod-biodiversity_files/figure-html/alpha-div-plot-3-1.png){width=672}\n:::\n:::\n\n\nFrom this plot it seems like the average geographic range size of tetrapods increased during the Permian. However, we first need to be sure we're not picking up on another pattern. Remember how we calculated the number of unique geographic cells in each time interval earlier? This provides a measure of the spatial spread of the fossil record. It might be that we're not picking up on an increased range size but just a larger geographic spread of fossil bearing rocks within the Permian. To see if this is the case, we can run a simple correlation test between the average geographic range size of tetrapods and the number of unique grid cells in each time interval:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run a correlation test between mean range size and the spatial spread of cells\n# through time\ncor.test(log10(space_tetrapods_mean$mean_area), log10(spat.cov$nrow), method = \"spearman\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tSpearman's rank correlation rho\n\ndata:  log10(space_tetrapods_mean$mean_area) and log10(spat.cov$nrow)\nS = 226.12, p-value = 0.01898\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.5962179 \n```\n\n\n:::\n:::\n\n\nThe high rho value and a p-value less than our cut off for significance (0.05) indicate a strong and statistically significant correlation between average geographic range size and the spatial spread of data. Seems like this work is far from over...\n\n...but we'll leave the rest to you!\n\nHopefully this vignette has shown you the potential uses for `palaeoverse` functions and helped provide a workflow for your own analyses. If you have any questions about the package or its functionality, please feel free to join our [Palaeoverse Google group](https://groups.google.com/g/palaeoverse) and leave a question; we'll aim to answer it as soon as possible!\n\n# References\n\nDunne, E.M., Close, R.A., Button, D.J., Brocklehurst, N., Cashmore, D.D., Lloyd, G.T. and Butler, R.J., 2018. Diversity change during the rise of tetrapods and the impact of the ‘Carboniferous rainforest collapse’. Proceedings of the Royal Society B: Biological Sciences, 285(1872), 20172730.\n",
    "supporting": [
      "tetrapod-biodiversity_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}